
# ------------------------ Celery ---------------------------

# redis-server
# celery worker: celery -A Multi_Vendor_Hospital_System worker --loglevel=info
# celery beat: celery -A Multi_Vendor_Hospital_System beat



# Celery Monitoring using Flower
# pip install flower
# celery -A Multi_Vendor_Medical_System flower --port=5555
# celery -A Multi_Vendor_Medical_System flower


# ------------------------- Docker --------------------------
docker build .   
docker-compose build


docker-compose run --rm project sh -c "flake8"
docker-compose run --rm project sh -c "django-admin startproject Multi-Vendor-Hospital-System ."
docker-compose run --rm project sh -c "python manage.py startapp app"
docker-compose run --rm project sh -c "celery -A Multi_Vendor_Hospital_System worker --loglevel=info"
docker-compose run --rm project sh -c "celery -A Multi_Vendor_Hospital_System beat"


docker-compose up    # start service

# add new packages or dependencies
docker-compose down
docker-compose build


# if migration problem occur:
docker volume ls
docker-compose down
docker volume rm volume
docker-compose run --rm project sh -c "python manage.py wait_for_db && python manage.py migrate"



docker-compose up -d
docker ps


# -------------------------- Elastic Search ----------------------------

https://testdriven.io/blog/django-drf-elasticsearch/#what-is-elasticsearch

pip install elasticsearch, elasticsearch-dsl, django-elasticsearch-dsl

INSTALLED_APPS = [
    'django_elasticsearch_dsl',
    'rest_framework',
] 
ELASTICSEARCH_DSL = {
    'default': {
        'hosts': 'localhost:9200'
    },
}

# command 
    - python manage.py search_index --rebuild    # creating elasticsearch index

# password change from docker os elasticsearch: 
    - docker-compose exec elasticsearch /bin/bash
    - bin/elasticsearch-setup-passwords auto
